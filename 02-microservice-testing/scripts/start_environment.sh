#!/bin/bash
# ===========================================
# –§–∞–π–ª: 02-microservice-testing/scripts/start_environment.sh
# ===========================================

set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
echo "===================================="

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ docker-compose
if ! command -v docker-compose &> /dev/null; then
    log_error "docker-compose –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ docker-compose."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [[ ! -f "docker-compose.yml" ]]; then
    log_error "docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å–∫–∞–π—Ç–µ –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ 02-microservice-testing/"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p {logs,reports}
log_info "–°–æ–∑–¥–∞–Ω—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ logs/ –∏ reports/"

log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ docker-compose..."
docker-compose config > /dev/null || {
    log_error "–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ docker-compose.yml"
    exit 1
}

log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose down --remove-orphans

log_info "–°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose up -d --build

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
log_info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞
wait_for_service() {
    local service_name=$1
    local url=$2
    local max_attempts=30
    local attempt=1
    
    while [[ $attempt -le $max_attempts ]]; do
        if curl -s -f "$url" > /dev/null 2>&1; then
            log_success "$service_name –≥–æ—Ç–æ–≤"
            return 0
        fi
        
        echo -n "."
        sleep 2
        ((attempt++))
    done
    
    log_error "$service_name –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∑–∞ $((max_attempts * 2)) —Å–µ–∫—É–Ω–¥"
    return 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
for i in {1..15}; do
    if docker-compose exec -T db pg_isready -U user -d testdb > /dev/null 2>&1; then
        echo
        log_success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞"
        break
    fi
    echo -n "."
    sleep 2
done

echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ mock-—Å–µ—Ä–≤–µ—Ä–∞"
wait_for_service "Mock-—Å–µ—Ä–≤–µ—Ä" "http://localhost:8001/health"

echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è" 
wait_for_service "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ" "http://localhost:8000/health"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
echo ""
log_info "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
docker-compose ps

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
echo ""
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤:"

# Health checks
echo -n "App health: "
if curl -s http://localhost:8000/health | jq -r '.status' 2>/dev/null; then
    log_success "OK"
else
    log_error "FAIL"
fi

echo -n "Mock health: "
if curl -s http://localhost:8001/health | jq -r '.status' 2>/dev/null; then
    log_success "OK"  
else
    log_error "FAIL"
fi

echo -n "App readiness: "
if curl -s http://localhost:8000/ready > /dev/null 2>&1; then
    log_success "OK"
else
    log_warning "Not ready yet"
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
echo ""
echo "üéâ –û–∫—Ä—É–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
echo "===================="
echo -e "${GREEN}–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:${NC}"
echo "‚Ä¢ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:  http://localhost:8000"
echo "‚Ä¢ Mock-—Å–µ—Ä–≤–µ—Ä: http://localhost:8001"
echo "‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: localhost:5432"
echo ""
echo -e "${BLUE}–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
echo "‚Ä¢ docker-compose logs -f               # –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
echo "‚Ä¢ docker-compose ps                    # —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "‚Ä¢ curl http://localhost:8000/health    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "‚Ä¢ ./scripts/run_tests.sh               # –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
echo "‚Ä¢ ./scripts/cleanup.sh                 # –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –æ—á–∏—Å—Ç–∫–∞"
echo ""
echo -e "${BLUE}API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:${NC}"
echo "‚Ä¢ GET  /health                         # health check"
echo "‚Ä¢ GET  /ready                          # readiness check"  
echo "‚Ä¢ GET  /users                          # —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
echo "‚Ä¢ POST /users                          # —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
echo "‚Ä¢ GET  /users/{id}/orders              # –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
echo "‚Ä¢ POST /orders                         # —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞"
