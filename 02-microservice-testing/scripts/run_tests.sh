# ===========================================
# –§–∞–π–ª: 02-microservice-testing/scripts/run_tests.sh
# ===========================================

#!/bin/bash
set -e

echo "üß™ –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
echo "================================="

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã
if ! docker-compose ps | grep -q "Up"; then
    log_error "–°–µ—Ä–≤–∏—Å—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./scripts/start_environment.sh"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."

check_service() {
    local url=$1
    local name=$2
    
    if curl -s -f "$url" > /dev/null; then
        log_success "$name –≥–æ—Ç–æ–≤"
        return 0
    else
        log_error "$name –Ω–µ –≥–æ—Ç–æ–≤"
        return 1
    fi
}

check_service "http://localhost:8000/health" "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
check_service "http://localhost:8001/health" "Mock-—Å–µ—Ä–≤–µ—Ä"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤
mkdir -p reports
log_info "–°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è reports/"

log_info "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —á–µ—Ä–µ–∑ docker-compose..."

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
docker-compose run --rm \
    -e PYTHONPATH=/app \
    tests \
    python -m pytest /app/tests \
        -v \
        --tb=short \
        --html=/app/reports/integration-report.html \
        --self-contained-html \
        --junit-xml=/app/reports/integration-junit.xml \
        --maxfail=5 \
        -p no:warnings || {
    
    log_error "–¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    echo ""
    echo "üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:"
    echo "=============================="
    
    echo "üîç –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫):"
    docker-compose logs --tail 10 app || true
    
    echo ""
    echo "üîç –õ–æ–≥–∏ mock-—Å–µ—Ä–≤–µ—Ä–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫):"
    docker-compose logs --tail 10 mock-server || true
    
    echo ""
    echo "üîç –õ–æ–≥–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫):"
    docker-compose logs --tail 5 db || true
    
    exit 1
}

log_success "–í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!"

# –ö–æ–ø–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç—ã
if docker-compose ps tests &>/dev/null; then
    docker-compose cp tests:/app/reports ./reports/ 2>/dev/null || true
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç—ã
echo ""
echo "üìä –°–æ–∑–¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç—ã:"
if [[ -f "reports/integration-report.html" ]]; then
    log_success "HTML –æ—Ç—á–µ—Ç: $(pwd)/reports/integration-report.html"
    echo "   –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: open reports/integration-report.html"
fi

if [[ -f "reports/integration-junit.xml" ]]; then
    log_success "JUnit XML: $(pwd)/reports/integration-junit.xml"
fi

echo ""
echo "üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "========================="
echo -e "${GREEN}–ß—Ç–æ –±—ã–ª–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ:${NC}"
echo "‚úÖ Health check —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã"
echo "‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π" 
echo "‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å mock-—Å–µ—Ä–≤–∏—Å–∞–º–∏"
echo "‚úÖ –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"
echo "‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫"