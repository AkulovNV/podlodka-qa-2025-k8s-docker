# ===========================================
# –§–∞–π–ª: scripts/cleanup-all.sh  
# ===========================================

#!/bin/bash

echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ QA DevOps Workshop..."
echo "==============================================="

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
echo -e "${YELLOW}‚ö†Ô∏è  –≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, —Å–µ—Ç–∏, volumes –∏ –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –≤–æ—Ä–∫—à–æ–ø–∞${NC}"
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
    exit 1
fi

log_info "–®–∞–≥ 1: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –≤–æ—Ä–∫—à–æ–ø–∞..."

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ docker-compose —Å–µ—Ä–≤–∏—Å–æ–≤
if [[ -f "02-microservice-testing/docker-compose.yml" ]]; then
    cd 02-microservice-testing
    docker-compose down -v --remove-orphans 2>/dev/null || true
    cd ..
    log_success "–ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø–æ –º–µ—Ç–∫–∞–º
docker stop $(docker ps -q --filter "label=workshop=qa-devops" 2>/dev/null) 2>/dev/null || true
docker rm $(docker ps -aq --filter "label=workshop=qa-devops" 2>/dev/null) 2>/dev/null || true

log_info "–®–∞–≥ 2: –£–¥–∞–ª–µ–Ω–∏–µ Docker –æ–±—Ä–∞–∑–æ–≤ –≤–æ—Ä–∫—à–æ–ø–∞..."
docker rmi $(docker images -q --filter "label=workshop=qa-devops" 2>/dev/null) 2>/dev/null || true
docker rmi qa-tests 2>/dev/null || true
docker rmi qaworkshop_app 2>/dev/null || true
docker rmi qaworkshop_mock-server 2>/dev/null || true
docker rmi qaworkshop_tests 2>/dev/null || true
log_success "–û–±—Ä–∞–∑—ã –≤–æ—Ä–∫—à–æ–ø–∞ —É–¥–∞–ª–µ–Ω—ã"

log_info "–®–∞–≥ 3: –û—á–∏—Å—Ç–∫–∞ Docker volumes..."
docker volume rm $(docker volume ls -q --filter "name=qaworkshop" 2>/dev/null) 2>/dev/null || true
docker volume rm $(docker volume ls -q --filter "name=02-microservice-testing" 2>/dev/null) 2>/dev/null || true
log_success "Volumes –æ—á–∏—â–µ–Ω—ã"

log_info "–®–∞–≥ 4: –£–¥–∞–ª–µ–Ω–∏–µ Docker —Å–µ—Ç–µ–π..."
docker network rm $(docker network ls -q --filter "name=qaworkshop" 2>/dev/null) 2>/dev/null || true
docker network rm $(docker network ls -q --filter "name=02-microservice-testing" 2>/dev/null) 2>/dev/null || true
log_success "–°–µ—Ç–∏ —É–¥–∞–ª–µ–Ω—ã"

log_info "–®–∞–≥ 5: –û—á–∏—Å—Ç–∫–∞ Kubernetes —Ä–µ—Å—É—Ä—Å–æ–≤..."
if command -v kubectl &> /dev/null; then
    kubectl delete namespace qa-environment 2>/dev/null || true
    kubectl delete -f 03-qa-environment-k8s/manifests/ 2>/dev/null || true
    log_success "Kubernetes —Ä–µ—Å—É—Ä—Å—ã —É–¥–∞–ª–µ–Ω—ã"
else
    log_warning "kubectl –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É Kubernetes"
fi

log_info "–®–∞–≥ 6: –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
rm -rf {reports,logs,artifacts,tmp}/ 2>/dev/null || true
rm -rf 01-tests-in-container/reports/ 2>/dev/null || true
rm -rf 02-microservice-testing/{logs,reports}/ 2>/dev/null || true
rm -rf 03-qa-environment-k8s/logs/ 2>/dev/null || true
rm -rf 04-cicd-integration/artifacts/ 2>/dev/null || true
rm -f .env 2>/dev/null || true
log_success "–õ–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã"

log_info "–®–∞–≥ 7: –û—á–∏—Å—Ç–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
if [[ -d "venv" ]]; then
    read -p "–£–¥–∞–ª–∏—Ç—å Python venv? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        rm -rf venv/
        log_success "Python venv —É–¥–∞–ª–µ–Ω"
    else
        log_warning "Python venv —Å–æ—Ö—Ä–∞–Ω–µ–Ω"
    fi
fi

log_info "–®–∞–≥ 8: –û–±—â–∞—è –æ—á–∏—Å—Ç–∫–∞ Docker..."
echo "–û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –º–µ—Å—Ç–æ, —É–¥–∞–ª—è—è –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ä–µ—Å—É—Ä—Å—ã..."
docker system prune -f
log_success "Docker —Å–∏—Å—Ç–µ–º–∞ –æ—á–∏—â–µ–Ω–∞"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
echo ""
echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:"
echo "Docker containers: $(docker ps -a -q | wc -l)"
echo "Docker images: $(docker images -q | wc -l)"  
echo "Docker volumes: $(docker volume ls -q | wc -l)"
echo "Docker networks: $(docker network ls -q | wc -l)"

if command -v kubectl &> /dev/null; then
    echo "K8s pods: $(kubectl get pods --all-namespaces --no-headers 2>/dev/null | wc -l || echo 0)"
fi

echo ""
echo "üéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "–°–∏—Å—Ç–µ–º–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é."