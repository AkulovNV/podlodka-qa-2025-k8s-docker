# ===========================================
# –§–∞–π–ª: scripts/demo-reset.sh
# ===========================================

#!/bin/bash

echo "üîÑ –°–±—Ä–æ—Å –¥–µ–º–æ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é..."
echo "====================================="

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_info "–®–∞–≥ 1: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤
if [[ -f "02-microservice-testing/docker-compose.yml" ]]; then
    cd 02-microservice-testing
    docker-compose down 2>/dev/null || true
    cd ..
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
docker stop $(docker ps -q --filter "label=workshop=qa-devops" 2>/dev/null) 2>/dev/null || true

log_info "–®–∞–≥ 2: –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
rm -rf {reports,logs,artifacts}/*
mkdir -p {reports,logs,artifacts}
mkdir -p 01-tests-in-container/reports
mkdir -p 02-microservice-testing/{logs,reports}
mkdir -p 03-qa-environment-k8s/logs
mkdir -p 04-cicd-integration/artifacts

log_info "–®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–µ–∂–∏—Ö .gitkeep —Ñ–∞–π–ª–æ–≤..."
find . -name "reports" -o -name "logs" -o -name "artifacts" | while read dir; do
    if [[ -d "$dir" ]]; then
        touch "$dir/.gitkeep"
    fi
done

log_info "–®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ Docker..."
# –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if [[ ! "$(docker images -q qa-tests 2>/dev/null)" ]]; then
    log_info "–ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤..."
    if [[ -f "01-tests-in-container/Dockerfile" ]]; then
        docker build -t qa-tests 01-tests-in-container/
    fi
fi

log_info "–®–∞–≥ 5: –°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ volumes –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
docker volume rm 02-microservice-testing_postgres_data 2>/dev/null || true

log_info "–®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Kubernetes..."
if command -v kubectl &> /dev/null; then
    # –£–¥–∞–ª—è–µ–º namespace –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    kubectl delete namespace qa-environment 2>/dev/null || true
    log_success "Kubernetes namespace —Å–±—Ä–æ—à–µ–Ω"
fi

log_info "–®–∞–≥ 7: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö..."
# –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ mock –¥–∞–Ω–Ω—ã—Ö
if [[ -f "02-microservice-testing/mocks/responses/orders.json.backup" ]]; then
    cp 02-microservice-testing/mocks/responses/orders.json.backup \
       02-microservice-testing/mocks/responses/orders.json
fi

log_info "–®–∞–≥ 8: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."
./scripts/check-prerequisites.sh > /dev/null && {
    log_success "Prerequisites –≤ –ø–æ—Ä—è–¥–∫–µ"
} || {
    log_info "–í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å prerequisites, –∑–∞–ø—É—Å—Ç–∏—Ç–µ check-prerequisites.sh"
}

echo ""
echo "üéâ –î–µ–º–æ —Å–±—Ä–æ—à–µ–Ω–æ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é!"
echo "======================================"
echo -e "${GREEN}–ì–æ—Ç–æ–≤–æ –∫ –Ω–æ–≤–æ–π –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:${NC}"
echo "‚Ä¢ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
echo "‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã"
echo "‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–±—Ä–æ—à–µ–Ω–∞"
echo "‚Ä¢ –û–±—Ä–∞–∑—ã –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
echo ""
echo -e "${BLUE}–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –ø–æ—Ä—è–¥–æ–∫ –¥–µ–º–æ:${NC}"
echo "1. cd 01-tests-in-container && ./scripts/run_in_docker.sh"
echo "2. cd ../02-microservice-testing && ./scripts/start_environment.sh"  
echo "3. cd ../03-qa-environment-k8s && ./scripts/deploy-qa.sh"
echo ""
