#!/bin/bash

echo "üîç –û—Ç–ª–∞–¥–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤..."
echo "=========================================="

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

IMAGE_NAME="qa-tests"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—Ä–∞–∑–∞
if ! docker images $IMAGE_NAME --format '{{.Repository}}' | grep -q "$IMAGE_NAME"; then
    echo -e "${YELLOW}‚ö†Ô∏è  –û–±—Ä–∞–∑ $IMAGE_NAME –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–±–∏—Ä–∞–µ–º...${NC}"
    docker build -t $IMAGE_NAME .
fi

echo "üê≥ –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏ –æ—Ç–ª–∞–¥–∫–∏:"
echo "1. –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π bash –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
echo "2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤"
echo "3. –ó–∞–ø—É—Å–∫ –æ–¥–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞"
echo "4. –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤"
echo "5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"

read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-5): " choice

case $choice in
    1)
        log_info "–ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ bash..."
        docker run -it --rm \
            -v "$(pwd):/workspace" \
            -w /app \
            $IMAGE_NAME bash
        ;;
    2)
        log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö Python –ø–∞–∫–µ—Ç–æ–≤..."
        docker run --rm $IMAGE_NAME pip list
        ;;
    3)
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ—Å—Ç—ã:"
        find tests -name "*.py" -type f | grep -E "test_.*\.py$"
        read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ —Ç–µ—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: tests/test_api.py): " test_file
        
        log_info "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: $test_file"
        docker run --rm \
            -v "$(pwd)/reports:/app/reports" \
            $IMAGE_NAME \
            python -m pytest "$test_file" -v -s
        ;;
    4)
        log_info "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."
        docker run --rm $IMAGE_NAME find /app -type f -name "*.py" | head -20
        ;;
    5)
        log_info "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."
        docker run --rm $IMAGE_NAME env | sort
        ;;
    *)
        echo "–ù–µ–≤–µ—Ä–Ω–∞—è –æ–ø—Ü–∏—è"
        exit 1
        ;;
esac

log_success "–û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
