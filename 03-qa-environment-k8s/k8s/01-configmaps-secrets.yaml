# Database credentials secret
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: qa-microservice-testing
type: Opaque
data:
  username: dXNlcg==
  password: cGFzc3dvcmQ=
  database: dGVzdGFi

---
# Database configuration ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: qa-microservice-testing
  labels:
    workshop: qa-devops
    component: database
data:
  POSTGRES_DB: testdb
  POSTGRES_USER: user
  POSTGRES_INITDB_ARGS: "--encoding=UTF8"

---
# Database initialization script ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-script
  namespace: qa-microservice-testing
  labels:
    workshop: qa-devops
    component: database
data:
  init.sql: |
    -- Инициализация базы данных
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    
    -- Настройки базы данных  
    ALTER DATABASE testdb SET timezone TO 'UTC';

---
# Mock server responses ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: mock-server-responses
  namespace: qa-microservice-testing
  labels:
    workshop: qa-devops
    component: mock-server
data:
  orders.json: |
    {
      "orders": [
        {
          "id": 1001,
          "user_id": 1,
          "items": [
            {"product": "Laptop", "quantity": 1, "price": 999.99}
          ],
          "total": 999.99,
          "status": "completed",
          "created_at": "2023-12-01T10:30:00Z"
        },
        {
          "id": 1002,
          "user_id": 2,
          "items": [
            {"product": "Book", "quantity": 2, "price": 15.99}
          ],
          "total": 31.98,
          "status": "shipped",
          "created_at": "2023-12-02T09:15:00Z"
        }
      ]
    }
  payments.json: |
    {
      "payments": [
        {
          "id": "PAY-001",
          "order_id": 1001,
          "amount": 999.99,
          "currency": "USD",
          "status": "completed",
          "payment_method": "credit_card",
          "created_at": "2023-12-01T10:35:00Z"
        },
        {
          "id": "PAY-002", 
          "order_id": 1002,
          "amount": 31.98,
          "currency": "USD",
          "status": "completed",
          "payment_method": "paypal",
          "created_at": "2023-12-02T09:20:00Z"
        }
      ]
    }
  users.json: |
    {
      "users": [
        {
          "id": 1,
          "name": "Alice Johnson",
          "email": "alice@example.com",
          "phone": "+1-555-0101",
          "address": {
            "street": "123 Main St",
            "city": "Anytown",
            "state": "CA",
            "zip": "12345"
          }
        },
        {
          "id": 2,
          "name": "Bob Smith", 
          "email": "bob@example.com",
          "phone": "+1-555-0102",
          "address": {
            "street": "456 Oak Ave",
            "city": "Another City", 
            "state": "NY",
            "zip": "67890"
          }
        }
      ]
    }

---
# Application configuration ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: qa-microservice-testing
  labels:
    workshop: qa-devops
    component: main-app
data:
  EXTERNAL_API_URL: "http://mock-server:8001"
  PYTHONPATH: "/app"

---
# Mock server configuration ConfigMap  
apiVersion: v1
kind: ConfigMap
metadata:
  name: mock-server-config
  namespace: qa-microservice-testing
  labels:
    workshop: qa-devops
    component: mock-server
data:
  FLASK_ENV: "development"
  FLASK_DEBUG: "1"

---
# Tests configuration ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: tests-config
  namespace: qa-microservice-testing
  labels:
    workshop: qa-devops
    component: tests
data:
  APP_URL: "http://app:8000"
  MOCK_URL: "http://mock-server:8001"
  PYTHONPATH: "/app"
