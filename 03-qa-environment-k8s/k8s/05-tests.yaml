# Tests Job
apiVersion: batch/v1
kind: Job
metadata:
  name: tests
  namespace: qa-microservice-testing
  labels:
    app: tests
    workshop: qa-devops
    component: tests
spec:
  template:
    metadata:
      labels:
        app: tests
        workshop: qa-devops
        component: tests
    spec:
      restartPolicy: Never
      containers:
      - name: tests
        image: cr.yandex/crp8fh8qsgbjccrgdjdj/qa-devops/tests-tests:latest
        imagePullPolicy: Always
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: database
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: database_url
        envFrom:
          - configMapRef:
              name: tests-config
        command: ["/bin/sh"]
        args:
          - -c
          - pytest -v /app/ --html=/app/reports/integration-report.html --self-contained-html --junit-xml=/app/reports/integration-junit.xml
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      initContainers:
      - name: wait-for-services
        image: curlimages/curl:latest
        command:
        - sh
        - -c
        - |
          echo "Waiting for app service..."
          until curl -f http://app:8000/health; do
            echo "App not ready, waiting..."
            sleep 10
          done
          echo "Waiting for mock-server service..."
          until curl -f http://mock-server:8001/health; do
            echo "Mock server not ready, waiting..."
            sleep 10
          done
          echo "All services are ready!"
  backoffLimit: 2
