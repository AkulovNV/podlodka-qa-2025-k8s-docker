# ===========================================
# –§–∞–π–ª: 03-qa-environment-k8s/scripts/port-forward.sh
# ===========================================

#!/bin/bash

echo "üîå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Port Forward –¥–ª—è QA –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
echo "============================================"

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ kubectl
if ! command -v kubectl &> /dev/null; then
    log_error "kubectl –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

NAMESPACE="qa-environment"
LOGS_DIR="logs"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ namespace
if ! kubectl get namespace "$NAMESPACE" &> /dev/null; then
    log_error "Namespace $NAMESPACE –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    log_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞: ./scripts/deploy-qa.sh"
    exit 1
fi

mkdir -p "$LOGS_DIR"

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö port-forward
stop_existing_forwards() {
    if [[ -f "$LOGS_DIR/port-forward.pid" ]]; then
        local pid=$(cat "$LOGS_DIR/port-forward.pid")
        if kill -0 "$pid" 2>/dev/null; then
            log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ port-forward (PID: $pid)"
            kill "$pid" 2>/dev/null || true
            sleep 2
        fi
        rm -f "$LOGS_DIR/port-forward.pid"
    fi
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
    pkill -f "kubectl port-forward.*$NAMESPACE" 2>/dev/null || true
}

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
log_info "–ü–æ–∏—Å–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
services=$(kubectl get services -n "$NAMESPACE" --no-headers -o custom-columns=":metadata.name,:spec.ports[0].port")

if [[ -z "$services" ]]; then
    log_error "–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ namespace $NAMESPACE"
    exit 1
fi

echo ""
echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
echo "===================="
counter=1
declare -a service_array
declare -a port_array

while IFS=$'\t' read -r service_name service_port; do
    [[ -z "$service_name" ]] && continue
    echo "$counter. $service_name (–ø–æ—Ä—Ç: $service_port)"
    service_array[$counter]=$service_name
    port_array[$counter]=$service_port
    ((counter++))
done <<< "$services"

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –µ—Å–ª–∏ –æ–¥–∏–Ω —Å–µ—Ä–≤–∏—Å
if [[ $counter -eq 2 ]]; then
    SELECTED_SERVICE=${service_array[1]}
    SELECTED_PORT=${port_array[1]}
    log_info "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±—Ä–∞–Ω –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å: $SELECTED_SERVICE"
else
    # –í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    echo ""
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å (1-$((counter-1))): " choice
    
    if [[ -z "${service_array[$choice]}" ]]; then
        log_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
        exit 1
    fi
    
    SELECTED_SERVICE=${service_array[$choice]}
    SELECTED_PORT=${port_array[$choice]}
fi

# –í—ã–±–æ—Ä –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞
echo ""
echo "üîå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞:"
read -p "–õ–æ–∫–∞–ª—å–Ω—ã–π –ø–æ—Ä—Ç (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 8080): " local_port
LOCAL_PORT=${local_port:-8080}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–Ω—è—Ç –ª–∏ –ø–æ—Ä—Ç
if lsof -i :$LOCAL_PORT &> /dev/null || netstat -tuln 2>/dev/null | grep :$LOCAL_PORT &> /dev/null; then
    log_warning "–ü–æ—Ä—Ç $LOCAL_PORT –∑–∞–Ω—è—Ç"
    read -p "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç? –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏–ª–∏ Enter –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–±–æ—Ä–∞: " alt_port
    if [[ -n "$alt_port" ]]; then
        LOCAL_PORT=$alt_port
    else
        LOCAL_PORT=$((8080 + RANDOM % 1000))
        log_info "–í—ã–±—Ä–∞–Ω —Å–ª—É—á–∞–π–Ω—ã–π –ø–æ—Ä—Ç: $LOCAL_PORT"
    fi
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö forwards
stop_existing_forwards

log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ port-forward..."
echo "–°–µ—Ä–≤–∏—Å: $SELECTED_SERVICE"
echo "–£–¥–∞–ª–µ–Ω–Ω—ã–π –ø–æ—Ä—Ç: $SELECTED_PORT"
echo "–õ–æ–∫–∞–ª—å–Ω—ã–π –ø–æ—Ä—Ç: $LOCAL_PORT"

# –ó–∞–ø—É—Å–∫ port-forward –≤ —Ñ–æ–Ω–µ
kubectl port-forward -n "$NAMESPACE" "svc/$SELECTED_SERVICE" "$LOCAL_PORT:$SELECTED_PORT" > "$LOGS_DIR/port-forward.log" 2>&1 &
PID=$!

# –°–æ—Ö—Ä–∞–Ω—è–µ–º PID
echo $PID > "$LOGS_DIR/port-forward.pid"

# –ñ–¥–µ–º, –ø–æ–∫–∞ port-forward –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
sleep 3

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
if kill -0 $PID 2>/dev/null; then
    log_success "Port-forward –∑–∞–ø—É—â–µ–Ω (PID: $PID)"
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    if curl -s -f "http://localhost:$LOCAL_PORT" > /dev/null 2>&1; then
        log_success "–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
    else
        log_warning "Port-forward –∑–∞–ø—É—â–µ–Ω, –Ω–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
        log_info "–í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è"
    fi
else
    log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å port-forward"
    cat "$LOGS_DIR/port-forward.log"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º —É–¥–æ–±–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
cat > "$LOGS_DIR/port-forward-commands.sh" <<EOF
#!/bin/bash
# –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å port-forward

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
curl http://localhost:$LOCAL_PORT/health 2>/dev/null | jq . || curl -s http://localhost:$LOCAL_PORT/health

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ port-forward
kill $(cat logs/port-forward.pid) 2>/dev/null || echo "Port-forward –Ω–µ –∑–∞–ø—É—â–µ–Ω"

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ port-forward
tail -f logs/port-forward.log

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ port-forward
./scripts/port-forward.sh
EOF

chmod +x "$LOGS_DIR/port-forward-commands.sh"

echo ""
echo "üéâ Port-forward –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
echo "========================"
echo -e "${GREEN}–î–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é:${NC}"
echo "‚Ä¢ URL: http://localhost:$LOCAL_PORT"
echo "‚Ä¢ –°–µ—Ä–≤–∏—Å: $SELECTED_SERVICE"
echo "‚Ä¢ PID: $PID"

echo ""
echo -e "${BLUE}–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
echo "‚Ä¢ curl http://localhost:$LOCAL_PORT/health  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "‚Ä¢ kill $PID                                 # –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ port-forward"
echo "‚Ä¢ tail -f logs/port-forward.log            # –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
echo "‚Ä¢ ./logs/port-forward-commands.sh          # –≥–æ—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã"

echo ""
echo -e "${YELLOW}–ü—Ä–∏–º–µ—á–∞–Ω–∏—è:${NC}"
echo "‚Ä¢ Port-forward —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–µ"
echo "‚Ä¢ –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ logs/port-forward.log"
echo "‚Ä¢ PID —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ logs/port-forward.pid"
echo "‚Ä¢ –ü—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ port-forward –æ—Å—Ç–∞–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω—ã–º"

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ñ–æ–Ω–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
read -p "–ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo ""
    log_info "–ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞... (Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏)"
    
    while kill -0 $PID 2>/dev/null; do
        if curl -s -f "http://localhost:$LOCAL_PORT" > /dev/null; then
            echo "$(date '+%H:%M:%S') - ‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ"
        else
            echo "$(date '+%H:%M:%S') - ‚ùå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
        fi
        sleep 10
    done
    
    log_warning "Port-forward –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è"
fi